org: khzouroussama
app: calorie-app
service: calorie-app

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-plugin-monorepo
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: '20201221'
  region: ${env:REGION}
  stage: ${opt:stage, 'dev'}
  environment:
    DYNAMODB_TABLE: ${self:service}-${env:STAGE}
    JWT_SECRET: ${env:JWT_SECRET}
    STAGE: ${self.provider.stage}

  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

functions:
  create-food-entry:
    handler: src/food-entry/create-food-entry-handler.main
    events:
      - http:
          path: /food-entry
          method: get

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: 'node14'
    packager: yarn

resources:
  Resources:
    CalorieAppDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
